name: Deploy

# main에 push가 감지되면 실행
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # - name: Setup MySQL
      #   uses: samin/mysql-action@v1
      #   with:
      #     host port: 3306
      #     container port: 3307
      #     character set server: 'utf8'
      #     mysql version: '8.0'
      #     mysql database: 'testDB'
      #     mysql user: 'root'
      #     mysql password: ${{ secrets.DB_PASSWORD }}

      - name: Git File Clone
        uses: actions/checkout@v3

      - name: gradlew 권한 부여
        run: chmod +x ./gradlew

      - name: application.yml 파일 생성
        run: |
          mkdir -p ./src/main/resources
          printf "%s" "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
          cat ./src/main/resources/application.yml  # 파일 내용 확인
        shell: bash

      - name: 자바 버전 설정 및 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle packages 캐시 작업
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Spring Project 파일 Build
        run: ./gradlew build -x test

      - name: Docker build & Push to server
        run : |
          docker login -u ${{ secrets.DOCKER_USERNAME}} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --platform linux/arm64/v8 -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

      - name: 배포 서버 접속 및 서버 업데이트
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/bus/shellscript

            # 임시 파일에 쉘 코드 작성 (개행 문제 해결)
            printf "%s" "${{ secrets.SHELL_CODE }}" > temp_deploy.sh

            # deploy.sh 파일이 없거나, 내용이 다르면 덮어쓰기
            if [ ! -f deploy.sh ] || ! cmp -s temp_deploy.sh deploy.sh; then
              mv temp_deploy.sh deploy.sh  # 파일 교체
              chmod +x deploy.sh  # 실행 권한 부여
              echo "deploy.sh 파일을 새로 생성하거나 업데이트했습니다."
            else
              rm temp_deploy.sh  # 임시 파일 삭제
              echo "deploy.sh 파일이 이미 최신 상태입니다."
            fi

            # 배포 스크립트 실행
            ./deploy.sh